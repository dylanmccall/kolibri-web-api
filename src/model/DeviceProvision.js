/*
 * Kolibri API
 * Kolibri Swagger API
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Facility', 'model/NoFacilityFacilityUser'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Facility'), require('./NoFacilityFacilityUser'));
  } else {
    // Browser globals (root is window)
    if (!root.KolibriApi) {
      root.KolibriApi = {};
    }
    root.KolibriApi.DeviceProvision = factory(root.KolibriApi.ApiClient, root.KolibriApi.Facility, root.KolibriApi.NoFacilityFacilityUser);
  }
}(this, function(ApiClient, Facility, NoFacilityFacilityUser) {
  'use strict';

  /**
   * The DeviceProvision model module.
   * @module model/DeviceProvision
   * @version v0
   */

  /**
   * Constructs a new <code>DeviceProvision</code>.
   * @alias module:model/DeviceProvision
   * @class
   * @param facility {module:model/Facility} 
   * @param preset {module:model/DeviceProvision.PresetEnum} 
   * @param superuser {module:model/NoFacilityFacilityUser} 
   * @param languageId {String} 
   * @param deviceName {String} 
   * @param settings {Object} 
   * @param allowGuestAccess {Boolean} 
   */
  var exports = function(facility, preset, superuser, languageId, deviceName, settings, allowGuestAccess) {
    this.facility = facility;
    this.preset = preset;
    this.superuser = superuser;
    this.languageId = languageId;
    this.deviceName = deviceName;
    this.settings = settings;
    this.allowGuestAccess = allowGuestAccess;
  };

  /**
   * Constructs a <code>DeviceProvision</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceProvision} obj Optional instance to populate.
   * @return {module:model/DeviceProvision} The populated <code>DeviceProvision</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('facility'))
        obj.facility = Facility.constructFromObject(data['facility']);
      if (data.hasOwnProperty('preset'))
        obj.preset = ApiClient.convertToType(data['preset'], 'String');
      if (data.hasOwnProperty('superuser'))
        obj.superuser = NoFacilityFacilityUser.constructFromObject(data['superuser']);
      if (data.hasOwnProperty('language_id'))
        obj.languageId = ApiClient.convertToType(data['language_id'], 'String');
      if (data.hasOwnProperty('device_name'))
        obj.deviceName = ApiClient.convertToType(data['device_name'], 'String');
      if (data.hasOwnProperty('settings'))
        obj.settings = ApiClient.convertToType(data['settings'], Object);
      if (data.hasOwnProperty('allow_guest_access'))
        obj.allowGuestAccess = ApiClient.convertToType(data['allow_guest_access'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {module:model/Facility} facility
   */
  exports.prototype.facility = undefined;

  /**
   * @member {module:model/DeviceProvision.PresetEnum} preset
   */
  exports.prototype.preset = undefined;

  /**
   * @member {module:model/NoFacilityFacilityUser} superuser
   */
  exports.prototype.superuser = undefined;

  /**
   * @member {String} languageId
   */
  exports.prototype.languageId = undefined;

  /**
   * @member {String} deviceName
   */
  exports.prototype.deviceName = undefined;

  /**
   * @member {Object} settings
   */
  exports.prototype.settings = undefined;

  /**
   * @member {Boolean} allowGuestAccess
   */
  exports.prototype.allowGuestAccess = undefined;


  /**
   * Allowed values for the <code>preset</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PresetEnum = {
    /**
     * value: "formal"
     * @const
     */
    formal: "formal",

    /**
     * value: "nonformal"
     * @const
     */
    nonformal: "nonformal",

    /**
     * value: "informal"
     * @const
     */
    informal: "informal"
  };

  return exports;

}));
