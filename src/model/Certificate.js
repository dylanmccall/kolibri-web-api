/*
 * Kolibri API
 * Kolibri Swagger API
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KolibriApi) {
      root.KolibriApi = {};
    }
    root.KolibriApi.Certificate = factory(root.KolibriApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Certificate model module.
   * @module model/Certificate
   * @version v0
   */

  /**
   * Constructs a new <code>Certificate</code>.
   * @alias module:model/Certificate
   * @class
   * @param profile {String} 
   * @param scopeDefinition {String} 
   * @param scopeVersion {Number} 
   * @param scopeParams {String} 
   * @param publicKey {String} 
   */
  var exports = function(profile, scopeDefinition, scopeVersion, scopeParams, publicKey) {
    this.profile = profile;
    this.scopeDefinition = scopeDefinition;
    this.scopeVersion = scopeVersion;
    this.scopeParams = scopeParams;
    this.publicKey = publicKey;
  };

  /**
   * Constructs a <code>Certificate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Certificate} obj Optional instance to populate.
   * @return {module:model/Certificate} The populated <code>Certificate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('parent'))
        obj.parent = ApiClient.convertToType(data['parent'], 'String');
      if (data.hasOwnProperty('profile'))
        obj.profile = ApiClient.convertToType(data['profile'], 'String');
      if (data.hasOwnProperty('scope_definition'))
        obj.scopeDefinition = ApiClient.convertToType(data['scope_definition'], 'String');
      if (data.hasOwnProperty('scope_version'))
        obj.scopeVersion = ApiClient.convertToType(data['scope_version'], 'Number');
      if (data.hasOwnProperty('scope_params'))
        obj.scopeParams = ApiClient.convertToType(data['scope_params'], 'String');
      if (data.hasOwnProperty('public_key'))
        obj.publicKey = ApiClient.convertToType(data['public_key'], 'String');
      if (data.hasOwnProperty('serialized'))
        obj.serialized = ApiClient.convertToType(data['serialized'], 'String');
      if (data.hasOwnProperty('signature'))
        obj.signature = ApiClient.convertToType(data['signature'], 'String');
      if (data.hasOwnProperty('salt'))
        obj.salt = ApiClient.convertToType(data['salt'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} parent
   */
  exports.prototype.parent = undefined;

  /**
   * @member {String} profile
   */
  exports.prototype.profile = undefined;

  /**
   * @member {String} scopeDefinition
   */
  exports.prototype.scopeDefinition = undefined;

  /**
   * @member {Number} scopeVersion
   */
  exports.prototype.scopeVersion = undefined;

  /**
   * @member {String} scopeParams
   */
  exports.prototype.scopeParams = undefined;

  /**
   * @member {String} publicKey
   */
  exports.prototype.publicKey = undefined;

  /**
   * @member {String} serialized
   */
  exports.prototype.serialized = undefined;

  /**
   * @member {String} signature
   */
  exports.prototype.signature = undefined;

  /**
   * @member {String} salt
   */
  exports.prototype.salt = undefined;

  return exports;

}));
