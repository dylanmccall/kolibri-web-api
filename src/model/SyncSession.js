/*
 * Kolibri API
 * Kolibri Swagger API
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KolibriApi) {
      root.KolibriApi = {};
    }
    root.KolibriApi.SyncSession = factory(root.KolibriApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SyncSession model module.
   * @module model/SyncSession
   * @version v0
   */

  /**
   * Constructs a new <code>SyncSession</code>.
   * @alias module:model/SyncSession
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SyncSession</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SyncSession} obj Optional instance to populate.
   * @return {module:model/SyncSession} The populated <code>SyncSession</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('start_timestamp'))
        obj.startTimestamp = ApiClient.convertToType(data['start_timestamp'], 'Date');
      if (data.hasOwnProperty('last_activity_timestamp'))
        obj.lastActivityTimestamp = ApiClient.convertToType(data['last_activity_timestamp'], 'Date');
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
      if (data.hasOwnProperty('client_certificate'))
        obj.clientCertificate = ApiClient.convertToType(data['client_certificate'], 'String');
      if (data.hasOwnProperty('server_certificate'))
        obj.serverCertificate = ApiClient.convertToType(data['server_certificate'], 'String');
      if (data.hasOwnProperty('profile'))
        obj.profile = ApiClient.convertToType(data['profile'], 'String');
      if (data.hasOwnProperty('connection_kind'))
        obj.connectionKind = ApiClient.convertToType(data['connection_kind'], 'String');
      if (data.hasOwnProperty('connection_path'))
        obj.connectionPath = ApiClient.convertToType(data['connection_path'], 'String');
      if (data.hasOwnProperty('client_ip'))
        obj.clientIp = ApiClient.convertToType(data['client_ip'], 'String');
      if (data.hasOwnProperty('server_ip'))
        obj.serverIp = ApiClient.convertToType(data['server_ip'], 'String');
      if (data.hasOwnProperty('client_instance'))
        obj.clientInstance = ApiClient.convertToType(data['client_instance'], 'String');
      if (data.hasOwnProperty('server_instance'))
        obj.serverInstance = ApiClient.convertToType(data['server_instance'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Date} startTimestamp
   */
  exports.prototype.startTimestamp = undefined;

  /**
   * @member {Date} lastActivityTimestamp
   */
  exports.prototype.lastActivityTimestamp = undefined;

  /**
   * @member {Boolean} active
   */
  exports.prototype.active = undefined;

  /**
   * @member {String} clientCertificate
   */
  exports.prototype.clientCertificate = undefined;

  /**
   * @member {String} serverCertificate
   */
  exports.prototype.serverCertificate = undefined;

  /**
   * @member {String} profile
   */
  exports.prototype.profile = undefined;

  /**
   * @member {module:model/SyncSession.ConnectionKindEnum} connectionKind
   */
  exports.prototype.connectionKind = undefined;

  /**
   * @member {String} connectionPath
   */
  exports.prototype.connectionPath = undefined;

  /**
   * @member {String} clientIp
   */
  exports.prototype.clientIp = undefined;

  /**
   * @member {String} serverIp
   */
  exports.prototype.serverIp = undefined;

  /**
   * @member {String} clientInstance
   */
  exports.prototype.clientInstance = undefined;

  /**
   * @member {String} serverInstance
   */
  exports.prototype.serverInstance = undefined;


  /**
   * Allowed values for the <code>connectionKind</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConnectionKindEnum = {
    /**
     * value: "network"
     * @const
     */
    network: "network",

    /**
     * value: "disk"
     * @const
     */
    disk: "disk"
  };

  return exports;

}));
